plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

//************打包格式：getProductName()_版本号_渠道名_时间戳releaseTime()_构建类型.apk **************//
//获取产品的名字
static def getProductName() {
    return "zy_client_android"
}
//获取当前系统的时间
static def releaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("GMT+08:00"))
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    //No version of NDK matched the requested version 20.0.5594570. Versions available locally: 21.0.6113669
    //https://stackoverflow.com/questions/60404457/no-version-of-ndk-matched-the-requested-version
    //ndkVersion "21.0.6113669"

    defaultConfig {
        applicationId "com.zy.client"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            // 'armeabi', 'armeabi-v7a', 'arm64-v8a' , 'x86' , 'x86_64', 'mips','mips64'
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

//    signingConfigs {
//        debug {
//            storeFile file(keystoreProperties['storeFileDebug'])
//            storePassword keystoreProperties['storePasswordDebug']
//            keyAlias keystoreProperties['keyAliasDebug']
//            keyPassword keystoreProperties['keyPasswordDebug']
//            keyAlias ''
//            keyPassword ''                    //密码
//            storeFile file('../keystore/stockdaily.jks')   //别名
//            storePassword ''                  //别名密码
//        }
//        release {
//            keyAlias ''
//            keyPassword ''                    //密码
//            storeFile file('../keystore/stockdaily.jks')   //别名
//            storePassword ''                  //别名密码
//            v1SigningEnabled true
//            v2SigningEnabled true
//        }
//    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

//    android.applicationVariants.all { variant ->
//        variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
//            def outputFile = apkData.outputFileName
//            if (outputFile != null && outputFile.endsWith('.apk')) {
//                def fileName = outputFile.replace("app-release", "zy_client_android").replace(".apk", "-${versionName}" + ".apk")
//                apkData.outputFileName = fileName
//            }
//        }
//    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            //应用名+版本号+渠道名+构建类型+时间戳${variant.flavorName}
            def buildType = variant.getBuildType().getName()//release
            def fileName = "zy_client_android_v${defaultConfig.versionName}_${defaultConfig.versionCode}_${variant.flavorName}_${releaseTime()}_${buildType}.apk"
            outputFileName = fileName
        }
    }

    kotlinOptions {
        // work-runtime-ktx 2.1.0 and above now requires Java 8
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]

        // Enable Coroutines and Flow APIs
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/*.kotlin_module'

        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment:2.3.1'
    implementation 'androidx.navigation:navigation-ui:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'

    implementation 'org.litepal.guolindev:core:3.2.1'

    implementation 'com.shuyu:GSYVideoPlayer:7.1.4'
    implementation 'cn.jzvd:jiaozivideoplayer:7.5.0'

    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.lzy.net:okgo:3.0.4'
    implementation 'com.github.smart-fun:XmlToJson:1.4.5'

    implementation  'com.scwang.smart:refresh-layout-kernel:2.0.1'
    implementation  'com.scwang.smart:refresh-header-classics:2.0.1'
    implementation  'com.scwang.smart:refresh-footer-classics:2.0.1'

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    implementation 'com.github.arcadefire:nice-spinner:1.4.4'
    implementation 'com.wuhenzhizao:titlebar:1.2.0'
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    implementation 'me.gujun.android.taggroup:library:1.4@aar'
    implementation 'com.lxj:xpopup:1.8.17'

    implementation 'com.blankj:utilcodex:1.29.0'
    implementation 'com.just.agentweb:agentweb-androidx:4.1.4'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'org.greenrobot:eventbus:3.2.0'

}


allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            // Try to turn them all off automatically
            options.compilerArgs << '-Xlint:none'
            options.compilerArgs << '-nowarn' // same as '-Xlint:none'

            // Turn them off manually
            options.compilerArgs << '-Xlint:-auxiliaryclass'
            options.compilerArgs << '-Xlint:-cast'
            options.compilerArgs << '-Xlint:-classfile'
            options.compilerArgs << '-Xlint:-deprecation'
            options.compilerArgs << '-Xlint:-dep-ann'
            options.compilerArgs << '-Xlint:-divzero'
            options.compilerArgs << '-Xlint:-empty'
            options.compilerArgs << '-Xlint:-fallthrough'
            options.compilerArgs << '-Xlint:-finally'
            options.compilerArgs << '-Xlint:-options'
            options.compilerArgs << '-Xlint:-overloads'
            options.compilerArgs << '-Xlint:-overrides'
            options.compilerArgs << '-Xlint:-path'
            options.compilerArgs << '-Xlint:-processing'
            options.compilerArgs << '-Xlint:-rawtypes'
            options.compilerArgs << '-Xlint:-serial'
            options.compilerArgs << '-Xlint:-static'
            options.compilerArgs << '-Xlint:-try'
            options.compilerArgs << '-Xlint:-unchecked'
            options.compilerArgs << '-Xlint:-varargs'
        }
    }
}